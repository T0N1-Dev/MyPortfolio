{"version":3,"file":"static/js/878.18a72728.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js","../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../node_modules/@tsparticles/engine/browser/Core/Engine.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../node_modules/@tsparticles/engine/browser/index.js","../node_modules/@tsparticles/engine/browser/init.js","../node_modules/@tsparticles/react/dist/Particles.js","../node_modules/@tsparticles/react/dist/index.js","../node_modules/@tsparticles/move-base/browser/Utils.js","../node_modules/@tsparticles/move-base/browser/BaseMover.js","../node_modules/@tsparticles/shape-circle/browser/Utils.js","../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","../node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../node_modules/@tsparticles/basic/browser/index.js","../node_modules/@tsparticles/plugin-hex-color/browser/index.js","../node_modules/@tsparticles/plugin-hsl-color/browser/index.js","../node_modules/@tsparticles/plugin-rgb-color/browser/index.js","../node_modules/@tsparticles/move-base/browser/index.js","../node_modules/@tsparticles/shape-circle/browser/index.js","../node_modules/@tsparticles/updater-color/browser/index.js","../node_modules/@tsparticles/updater-opacity/browser/index.js","../node_modules/@tsparticles/updater-out-modes/browser/index.js","../node_modules/@tsparticles/updater-size/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","../node_modules/@tsparticles/shape-emoji/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","../node_modules/@tsparticles/shape-image/browser/Utils.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","../node_modules/@tsparticles/shape-image/browser/index.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","../node_modules/@tsparticles/updater-life/browser/Utils.js","../node_modules/@tsparticles/shape-line/browser/LineDrawer.js","../node_modules/@tsparticles/shape-line/browser/Utils.js","../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","../node_modules/@tsparticles/interaction-particles-links/browser/index.js","../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","../node_modules/@tsparticles/shape-square/browser/Utils.js","../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","../node_modules/@tsparticles/shape-star/browser/Utils.js","../node_modules/@tsparticles/shape-star/browser/StarDrawer.js","../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","../node_modules/@tsparticles/slim/browser/index.js","../node_modules/@tsparticles/move-parallax/browser/index.js","../node_modules/@tsparticles/interaction-external-attract/browser/index.js","../node_modules/@tsparticles/interaction-external-bounce/browser/index.js","../node_modules/@tsparticles/interaction-external-bubble/browser/index.js","../node_modules/@tsparticles/interaction-external-connect/browser/index.js","../node_modules/@tsparticles/interaction-external-grab/browser/index.js","../node_modules/@tsparticles/interaction-external-pause/browser/index.js","../node_modules/@tsparticles/interaction-external-push/browser/index.js","../node_modules/@tsparticles/interaction-external-remove/browser/index.js","../node_modules/@tsparticles/interaction-external-repulse/browser/index.js","../node_modules/@tsparticles/interaction-external-slow/browser/index.js","../node_modules/@tsparticles/interaction-particles-attract/browser/index.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","../node_modules/@tsparticles/plugin-easing-quad/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/index.js","../node_modules/@tsparticles/shape-line/browser/index.js","../node_modules/@tsparticles/shape-square/browser/index.js","../node_modules/@tsparticles/shape-star/browser/index.js","../node_modules/@tsparticles/updater-life/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/index.js","../node_modules/@tsparticles/updater-stroke-color/browser/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n","export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n"],"names":["generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","percentDenominator","half","millisecondsToSeconds","originPoint","defaultTransform","randomColorValue","midColorValue","double","doublePI","Math","PI","generatedTrue","generatedFalse","canvasTag","rgbMax","hMax","sMax","lMax","hMin","sMin","hPhase","quarter","threeQuarter","minVelocity","defaultOpacity","decayOffset","identity","lMin","rgbFactor","triple","sextuple","sNormalizedOffset","phaseNumerator","defaultRgbMin","defaultVelocity","defaultLoops","defaultTime","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","Array","isNull","undefined","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","cos","sin","coords3d","Error","origin","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","idx","cancelAnimationFrame","getRandom","clamp","Number","EPSILON","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","degToRad","degrees","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","data","position","size","width","height","parseAlpha","input","endsWith","parseFloat","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","indexOf","async","loadFont","font","weight","fonts","load","itemFromArray","index","arguments","arrayRandomIndex","isPointInside","point","offset","radius","direction","bounds","inside","bottom","top","left","right","areBoundsInside","calculateBounds","deepExtend","destination","_len2","sources","_key2","sourceIsArray","key","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","enable","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","options","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","bounceOptions","resH","resV","obj","item","itemFromSingleOrMultiple","useIndex","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","increase","status","increasing","decrease","decreasing","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","percent","_","rest","updateAnimation","changeDirection","destroyType","delta","destroyed","minValue","maxValue","destroy","checkDestroy","getFullScreenStyle","fn","cache","Map","_len","args","_key","JSON","stringify","has","get","result","set","memoize","zIndex","fullScreenStyle","createElement","style","margin","padding","borderWidth","toString","setProperty","AlterType","InteractivityDetect","EventType","DivType","ResponsiveMode","ThemeMode","CollisionMode","OutMode","LimitMode","InteractorType","ParticleOutType","RangeType","stringToRgba","engine","manager","colorManagers","values","startsWith","stringPrefix","parseString","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","g","b1","b","h","l","s","hslToRgb","hsl","hNormalized","sNormalized","lNormalized","grayscaleValue","round","channel","temp1","temp2","temp3","phaseThird","red","green","blue","hslaToRgba","hsla","rgbResult","a","fixedMin","fixedMax","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","updateColorValue","range","updateColor","ranges","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","drawParticle","container","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","rotating","transformData","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","fillStyle","strokeWidth","lineWidth","stroke","strokeStyle","drawData","shape","drawer","shapeDrawers","draw","pixelRatio","retina","shapeClose","shapeFill","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","newValue","setStyle","canvas","important","elementStyle","keys","Set","Object","prototype","hasOwnProperty","call","getPropertyValue","removeProperty","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","_engine","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","Promise","resolve","reject","image","img","addEventListener","_coverImage","evt","src","_initStyle","_fullScreen","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_originalStyle","_mutationObserver","fullScreen","_standardSize","stdSize","_context","_generated","paint","stop","remove","drawAsync","spawning","pfColor","psColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","dataset","ariaHidden","clonedStyle","styleKey","styleValue","stylePriority","getPropertyPriority","cloneStyle","standardSize","offsetHeight","offsetWidth","retinaSize","getContext","currentSize","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","name","default","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","circle","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","tmp","Modes","_container","interactors","interactor","loadModeOptions","Interactivity","modes","ManualParticle","Responsive","maxWidth","Infinity","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","Effect","close","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","out","Spin","Move","attract","center","none","drift","gravity","path","outModes","spin","straight","vibrate","warp","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","SizeAnimation","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","collisions","groups","number","reduceDuplicates","group","hasOwn","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","getInteractors","external","particlesInteract","reset","fixOutMode","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_this","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","outside","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","outType","override","unbreakable","inRange","slow","pathGenerator","shapeDrawer","particleDestroy","particleDestroyed","dispatchEvent","strokeColor","id","overrideOptions","effectClose","effectFill","lastPathTime","isRotating","misplaced","maxDistance","normal","ignoresResizeRatio","mainOptions","particlesOptions","effectType","shapeType","effectOptions","shapeOptions","availableEffects","availableShapes","effectData","loadEffectData","shapeData","loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","setLastZIndex","sides","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","BaseRange","Circle","contains","intersects","distPos","abs","Rectangle","rectangle","rectRange","pow","w","w2","h2","QuadTree","capacity","_subdivide","i","fixedIndex","_subs","_divided","_points","insert","check","queryCircle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","forEach","addParticle","limitMode","currentCount","countToRemove","wait","update","condition","particlesInitialization","groupOptions","j","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","resizeFactor","particleUpdate","checkDelete","zArray","Retina","devicePixelRatio","ratio","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","clearClickHandlers","clearPlugins","mainArr","items","findIndex","containerDestroyed","refreshTime","frame","_drawAnimationFrame","export","supported","blob","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","containerInit","particlesSetup","_currentTheme","handle","containerPaused","needsUpdate","containerPlay","start","HTMLElement","containerStarted","_delayTimeout","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","all","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","version","addColorManager","addConfig","configAdded","addEasing","easing","getEasing","addEffect","addInteractor","interactorInitializer","addMover","moverInitializer","addParticleUpdater","updaterInitializer","addPathGenerator","addPlugin","getPlugin","addPreset","addShape","validType","validTypes","checkVersion","pluginVersion","dom","domItem","needsPlugin","params","url","fallback","response","fetch","ok","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","deleteCount","domContainer","getDomContainer","getElementById","body","append","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","setOnClickHandler","ExternalInteractorBase","ParticlesInteractorBase","RotateDirection","GradientType","EasingType","tsParticles","f","m","then","particlesLoaded","className","generate","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","spinOptions","spinPos","spinCenter","spinAcceleration","clockwise","counterClockwise","initSpin","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","spinClockwise","updateFunc","maxCanvasSize","halfMaxSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","drawCircle","ColorUpdater","hAnimation","sAnimation","lAnimation","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","_parseString","hexColor","hexFixed","replace","exec","parseInt","HslIndexes","HslColorManager","OpacityUpdater","opacityOptions","opacityAnimation","BounceOutMode","split","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","checkOutMode","_updateOutMode","RgbColorManager","rgbColor","SizeUpdater","sizeAnimation","loadBasic","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","ImageBitmap","emojiDataKey","previousAlpha","drawEmoji","promises","emoji","randomIndexData","emojiOptions","fullSize","OffscreenCanvas","textBaseline","textAlign","fillText","transferToImageBitmap","processAttract","attractRadius","area","queryCb","attractOptions","attractFactor","normVec","Attract","easeOutQuad","attractMode","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","enabledCb","hoverAttract","clickAttract","halfPI","processBounce","divBounce","bounceMode","bounceCb","querySelectorAll","elem","offsetLeft","offsetTop","tolerance","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","mouseBounce","BubbleBase","BubbleDiv","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","currentColorRegex","loadImage","loading","Image","downloadSvgImage","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","increment","noData","DisposalMethod","GIFDataHeaders","defaultLoopCount","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","concat","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","ApplicationExtension","applicationExtension","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","parseExtensionBlock","loadGifImage","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","Replace","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","ImageDrawer","loadImageShape","addImage","images","offscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","Preload","ImagePreloaderPlugin","preloadOptions","existing","extLength","imageFunc","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","updateLife","LineDrawer","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","attractDistance","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","_linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","ids","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","p3","opacityTriangle","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","side","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","drawPolygon","getCenter","getSidesData","polygon","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","inset","starInset","drawStar","star","StrokeColorUpdater","strokeAnimation","strokeHslColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater"],"sourceRoot":""}